this.AdminController = RouteController.extend({
  layoutTemplate: 'AdminLayout',
  waitOn: function() {
    return [Meteor.subscribe('adminUsers'), Meteor.subscribe('adminUser'), Meteor.subscribe('adminCollectionsCount')];
  },
  onBeforeAction: function() {
    Session.set('adminSuccess', null);
    Session.set('adminError', null);
    Session.set('admin_title', '');
    Session.set('admin_subtitle', '');
    Session.set('admin_collection_page', null);
    Session.set('admin_collection_name', null);
    Session.set('admin_id', null);
    Session.set('admin_doc', null);
    if (!Roles.userIsInRole(Meteor.userId(), ['admin'])) {
      Meteor.call('adminCheckAdmin');
      if (typeof (typeof AdminConfig !== "undefined" && AdminConfig !== null ? AdminConfig.nonAdminRedirectRoute : void 0) === 'string') {
        Router.go(AdminConfig.nonAdminRedirectRoute);
      }
    }
    return this.next();
  }
});

Router.route("adminDashboard", {
  path: "/admin",
  template: "AdminDashboard",
  controller: "AdminController",
  action: function() {
    return this.render();
  },
  onAfterAction: function() {
    Session.set('admin_title', 'Dashboard');
    Session.set('admin_collection_name', '');
    return Session.set('admin_collection_page', '');
  }
});

Router.route("adminDashboardUsersNew", {
  path: "/admin/Users/new",
  template: "AdminDashboardUsersNew",
  controller: 'AdminController',
  action: function() {
    return this.render();
  },
  onAfterAction: function() {
    Session.set('admin_title', 'Users');
    Session.set('admin_subtitle', 'Create new user');
    Session.set('admin_collection_page', 'New');
    return Session.set('admin_collection_name', 'Users');
  }
});

Router.route("adminDashboardUsersEdit", {
  path: "/admin/Users/:_id/edit",
  template: "AdminDashboardUsersEdit",
  controller: "AdminController",
  data: function() {
    return {
      user: Meteor.users.find(this.params._id).fetch(),
      roles: Roles.getRolesForUser(this.params._id),
      otherRoles: _.difference(_.map(Meteor.roles.find().fetch(), function(role) {
        return role.name;
      }), Roles.getRolesForUser(this.params._id))
    };
  },
  action: function() {
    return this.render();
  },
  onAfterAction: function() {
    Session.set('admin_title', 'Users');
    Session.set('admin_subtitle', 'Edit user ' + this.params._id);
    Session.set('admin_collection_page', 'edit');
    Session.set('admin_collection_name', 'Users');
    Session.set('admin_id', this.params._id);
    return Session.set('admin_doc', Meteor.users.findOne({
      _id: this.params._id
    }));
  }
});

Router.route("adminDashboardView", {
  path: "/admin/:collection",
  template: "AdminDashboardViewWrapper",
  controller: "AdminController",
  data: function() {
    return {
      admin_table: AdminTables[this.params.collection]
    };
  },
  action: function() {
    return this.render();
  },
  onAfterAction: function() {
    Session.set('admin_title', this.params.collection);
    Session.set('admin_subtitle', 'View');
    return Session.set('admin_collection_name', this.params.collection);
  }
});

Router.route("adminDashboardNew", {
  path: "/admin/:collection/new",
  template: "AdminDashboardNew",
  controller: "AdminController",
  action: function() {
    return this.render();
  },
  onAfterAction: function() {
    Session.set('admin_title', AdminDashboard.collectionLabel(this.params.collection));
    Session.set('admin_subtitle', 'Create new');
    Session.set('admin_collection_page', 'new');
    return Session.set('admin_collection_name', this.params.collection.charAt(0).toUpperCase() + this.params.collection.slice(1));
  },
  data: function() {
    return {
      admin_collection: adminCollectionObject(this.params.collection)
    };
  }
});

Router.route("adminDashboardEdit", {
  path: "/admin/:collection/:_id/edit",
  template: "AdminDashboardEdit",
  controller: "AdminController",
  waitOn: function() {
    return Meteor.subscribe('adminCollectionDoc', this.params.collection, this.params._id);
  },
  action: function() {
    return this.render();
  },
  onAfterAction: function() {
    Session.set('admin_title', AdminDashboard.collectionLabel(this.params.collection));
    Session.set('admin_subtitle', 'Edit ' + this.params._id);
    Session.set('admin_collection_page', 'edit');
    Session.set('admin_collection_name', this.params.collection.charAt(0).toUpperCase() + this.params.collection.slice(1));
    Session.set('admin_id', this.params._id);
    return Session.set('admin_doc', adminCollectionObject(this.params.collection).findOne({
      _id: this.params._id
    }));
  },
  data: function() {
    return {
      admin_collection: adminCollectionObject(this.params.collection)
    };
  }
});

// ---
// generated by coffee-script 1.9.0
